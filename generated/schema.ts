// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  TypedMap,
  Entity,
  Value,
  ValueKind,
  store,
  Address,
  Bytes,
  BigInt,
  BigDecimal
} from "@graphprotocol/graph-ts";

export class N extends Entity {
  constructor(id: string) {
    super();
    this.set("id", Value.fromString(id));
  }

  save(): void {
    let id = this.get("id");
    assert(id !== null, "Cannot save N entity without an ID");
    assert(
      id.kind == ValueKind.STRING,
      "Cannot save N entity with non-string ID. " +
        'Considering using .toHex() to convert the "id" to a string.'
    );
    store.set("N", id.toString(), this);
  }

  static load(id: string): N | null {
    return store.get("N", id) as N | null;
  }

  get id(): string {
    let value = this.get("id");
    return value.toString();
  }

  set id(value: string) {
    this.set("id", Value.fromString(value));
  }

  get owner(): Bytes {
    let value = this.get("owner");
    return value.toBytes();
  }

  set owner(value: Bytes) {
    this.set("owner", Value.fromBytes(value));
  }

  get name(): string {
    let value = this.get("name");
    return value.toString();
  }

  set name(value: string) {
    this.set("name", Value.fromString(value));
  }

  get first(): i32 {
    let value = this.get("first");
    return value.toI32();
  }

  set first(value: i32) {
    this.set("first", Value.fromI32(value));
  }

  get second(): i32 {
    let value = this.get("second");
    return value.toI32();
  }

  set second(value: i32) {
    this.set("second", Value.fromI32(value));
  }

  get third(): i32 {
    let value = this.get("third");
    return value.toI32();
  }

  set third(value: i32) {
    this.set("third", Value.fromI32(value));
  }

  get fourth(): i32 {
    let value = this.get("fourth");
    return value.toI32();
  }

  set fourth(value: i32) {
    this.set("fourth", Value.fromI32(value));
  }

  get fifth(): i32 {
    let value = this.get("fifth");
    return value.toI32();
  }

  set fifth(value: i32) {
    this.set("fifth", Value.fromI32(value));
  }

  get sixth(): i32 {
    let value = this.get("sixth");
    return value.toI32();
  }

  set sixth(value: i32) {
    this.set("sixth", Value.fromI32(value));
  }

  get seventh(): i32 {
    let value = this.get("seventh");
    return value.toI32();
  }

  set seventh(value: i32) {
    this.set("seventh", Value.fromI32(value));
  }

  get eighth(): i32 {
    let value = this.get("eighth");
    return value.toI32();
  }

  set eighth(value: i32) {
    this.set("eighth", Value.fromI32(value));
  }

  get numbers(): Array<i32> {
    let value = this.get("numbers");
    return value.toI32Array();
  }

  set numbers(value: Array<i32>) {
    this.set("numbers", Value.fromI32Array(value));
  }

  get metadataURI(): string {
    let value = this.get("metadataURI");
    return value.toString();
  }

  set metadataURI(value: string) {
    this.set("metadataURI", Value.fromString(value));
  }
}
